stages:
  - test
  - build

build-doc:
  stage: build
  image: python:3
  script:
    - pip3 install sphinx
    - make doc
  artifacts:
    expire_in: 2 weeks
    paths:
      - doc/build/html
  only:
    - master

build-ubuntu:
  stage: build
  image: python:3
  script:
    - python3 setup.py sdist
    - python3 setup.py bdist
  artifacts:
    expire_in: 2 weeks
    paths:
      - dist/
  only:
    - master

security-check:
  stage: test
  image: python:3
  script:
    - pip3 install safety
    - safety check -r requirements.txt

test-pytest:
  stage: test
  image: python:3.5
  script:
    - apt-get update && apt-get install -y libidn11-dev
    - git clone git://git.louiz.org/slixmpp
    - pip3 install pytest pyasn1-modules cffi --upgrade
    - cd slixmpp
    - python3 setup.py install
    - cd ..
    - python3 setup.py install
    - py.test -v test/

test-pytest:
  stage: test
  image: python:3.6
  script:
    - apt-get update && apt-get install -y libidn11-dev
    - git clone git://git.louiz.org/slixmpp
    - pip3 install pytest pyasn1-modules cffi --upgrade
    - cd slixmpp
    - python3 setup.py install
    - cd ..
    - python3 setup.py install
    - py.test -v test/

test-pylint:
  stage: test
  image: python:3
  script:
    - apt-get update && apt-get install -y libidn11-dev
    - git clone git://git.louiz.org/slixmpp
    - pip3 install pylint pyasn1-modules cffi --upgrade
    - cd slixmpp
    - python3 setup.py install
    - cd ..
    - python3 setup.py install
    - pylint -E poezio

formatting-check:
  stage: test
  image: python:3
  allow_failure: true
  script:
    - pip3 install yapf
    - yapf -dpr poezio
    - "[ -n \"$(yapf -dpr poezio)\" ] && echo 'Formatting check failed, please run yapf' && exit 1 || echo 'Formatting check succeeded'"
